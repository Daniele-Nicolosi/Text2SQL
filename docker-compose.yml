services:
  mariadb: 
    image: mariadb:latest
    container_name: mariadb
    environment:                 # credenziali e DB iniziale
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: movies_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"              # espone MariaDB
    volumes:                     # dati e script di init
      - ./mariadb_data:/var/lib/mysql   
      - ./mariadb_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:                 # verifica che il DB risponda
      test: ["CMD", "mariadb", "-u", "root", "-prootpassword", "-e", "SELECT 1;"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 30s
      
  data_loader:
    build:
      context: ./mariadb_init    # Dockerfile del loader
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:                     
      - ./mariadb_init:/app      
      - ./db_utils:/app/db_utils
    working_dir: /app
    command: sh -c "python load_data.py && tail -f /dev/null"
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:                  # verifica che il container resti attivo
      test: ["CMD-SHELL", "[ -e /proc/1 ] && exit 0 || exit 1"]  
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    
  ollama:
    build:
      context: ./ollama_service  # Dockerfile Ollama
    image: text2sql-ollama:local
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama_data:/root/.ollama
    healthcheck:                  # controlla modelli caricati
      test: ["CMD-SHELL", "curl -fsS http://localhost:11434/api/tags | grep -q 'gemma3:1b-it-qat' && curl -fsS http://localhost:11434/api/tags | grep -q 'gemma3:1b-it-q4_K_M'"]
      interval: 1m
      timeout: 15s
      retries: 60
      start_period: 60s

  backend:
    build:
      context: ./backend
    depends_on:
      data_loader:              
        condition: service_healthy
      ollama:
        condition: service_healthy
    ports:
      - "8003:8003"
    volumes:                       
      - ./backend:/app            
      - ./db_utils:/app/db_utils
      - ./text_to_sql:/app/text_to_sql
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:                  # verifica API backend
      test: ["CMD-SHELL", "curl -f http://localhost:8003/ || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 5s

  frontend:
    build: ./frontend
    container_name: frontend
    environment:
      - BACKEND_URL=http://backend:8003
    ports:
      - "8004:8004"
    depends_on:
      backend:
        condition: service_healthy

